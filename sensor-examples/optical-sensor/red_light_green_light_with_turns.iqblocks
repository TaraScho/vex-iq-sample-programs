{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"B3v!3JP5ZTf/Sc;$yKAK\">Optcolor</variable></variables><comment id=\"xx0R+$X@eV$)cA,rj^,t\" x=\"670\" y=\"85\" h=\"809\" w=\"673\">This builds on the Red light green light program and adds right and left turns further demonstrate the OPTICAL sensor and using color in programming logic.\n\nIf the optical sensor detects a green object, the robot drives forward until it is told to stop.\n\nIf the optical sensor detects a red object, the robot stops driving.\n\nIf the robot detects a Blue light, it turns 90 degrees to the right. We tell the robot not to wait, in order to make the turns non-blocking. We do not want to robot to wait for the turn to finish before it starts monitoring the other sensors again.\n\nIf the robot detects a Purple light, it turns 90 degrees to the left. Again, We tell the robot not to wait, in order to make the turns non-blocking. We do not want to robot to wait for the turn to finish before it starts monitoring the other sensors again.\n\nDemonstrates:\n- OPTICAL sensor and color\n- Wait blocks (and why don't wait is needed after the turns)\n- Turns\n\nBrain Supported: 2nd generation\n\nConfiguration:\nBaseBot with Sensors (Drivetrain 2-motor, Inertial)\nLeft Motor in Port 7\nRight Motor in Port 12\nTouchLED in Port 11\nOptical Sensor in Port 10\nDistance Sensor in Port 6\nBumper Switch in Port 5</comment><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"210\" y=\"-110\"><next><block type=\"iq_other_comment\" id=\"8o*kJXN/T_^56{ZXKiEb\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"`,XrtJL9k-dF/M^Q*,sZ\"><field name=\"comment\">Optical sensor light on helps the robot see better, may need adjusted based on environment</field></shadow></value><next><block type=\"iq_sensing_optical_set_light\" id=\"0:Je;kmlMG7#^38+9:a3\"><field name=\"OPTICAL\">Optical10</field><field name=\"OPTION\">on</field><next><block type=\"iq_sensing_optical_set_mode\" id=\"u:k^0wQ.EXQLGL?gwfS+\"><field name=\"OPTICAL\">Optical10</field><field name=\"MODE\">color</field><next><block type=\"iq_control_forever\" id=\"QGy3#r/kH81c))?m@3EL\"><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"@{6,K,?GCE7GK:[*v}f.\"><value name=\"CONDITION\"><block type=\"iq_sensing_optical_detect\" id=\"qft]764iA$g`P{`!M1t6\"><field name=\"OPTICAL\">Optical10</field><field name=\"COLORS\">green</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"MkT$pDVQ?2K,q1y|])V)\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\")Q%}j%Ad=Oc4igsfB[W-\"><field name=\"comment\">Greenlight tells the robot to move forward</field></shadow></value><next><block type=\"iq_drivetrain_drive\" id=\"e`jhT)K0@?y{gZ#BN*s@\"><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_looks_print_new\" id=\"%bf.0sDtYL`O,v1ra)xO\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"M|)fx}dZRLf5p7z{56M+\"><field name=\"TEXT\">Greenlight</field></shadow></value><next><block type=\"iq_looks_next_row_new\" id=\"U@/(:zjeM(bBptg*Qu{b\"><field name=\"TARGET\">Brain</field></block></next></block></next></block></next></block></statement><next><block type=\"iq_control_if_then\" id=\"tWLcU8~,1I^7H1A}Sp~W\"><value name=\"CONDITION\"><block type=\"iq_sensing_optical_detect\" id=\"wFnCH5d7FAP*`T`yi5BA\"><field name=\"OPTICAL\">Optical10</field><field name=\"COLORS\">red</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"/v^fE+0!b~_T@_s2d+%2\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"R{Vm]C4.A+!{LP,D6/Ao\"><field name=\"comment\">Red light tells the robot to stop</field></shadow></value><next><block type=\"iq_motion_stop_driving\" id=\"g}gG[Mv-.(#CT(ne!0BJ\"><next><block type=\"iq_looks_print_new\" id=\"{[O#=H`Ul-AH|T_TRuYT\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"f%jNwFUPpr3iv_V/Wx{R\"><field name=\"TEXT\">Redlight</field></shadow></value><next><block type=\"iq_looks_next_row_new\" id=\"0Qc/]BiLIlVVy!dphSI/\"><field name=\"TARGET\">Brain</field></block></next></block></next></block></next></block></statement><next><block type=\"iq_control_if_then\" id=\"6w+AJ$avpJsyM(nEJ|hD\"><value name=\"CONDITION\"><block type=\"iq_sensing_optical_detect\" id=\"{p:p,kt=Bt|ACJaXdqa}\"><field name=\"OPTICAL\">Optical10</field><field name=\"COLORS\">blue</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"_nyQ5xqCo9E9|f`]:sGn\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"5vzR3Am0_UpIYJ8A=40L\"><field name=\"comment\">Blue light tells the robot to turn right</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"$lMGCW@aypm;Y#p6w(pL\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"!we9;Y8Tui.T?at}%UT/\"><field name=\"TEXT\">Bluelight</field></shadow></value><next><block type=\"iq_looks_next_row_new\" id=\"qwAJ90/y.,D86t3lDWb4\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_drivetrain_turn_for\" id=\"dYfLI:IKC=1qIc*tTF_,\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"[5c_Nrz3%V#5Wv*(,g~9\"><field name=\"NUM\">90</field></shadow></value></block></next></block></next></block></next></block></statement><next><block type=\"iq_control_if_then\" id=\"eZ?o^X5X[cBLK^1i(hBL\"><value name=\"CONDITION\"><block type=\"iq_sensing_optical_detect\" id=\"C`R0@NjnL}aBhBjg2x8,\"><field name=\"OPTICAL\">Optical10</field><field name=\"COLORS\">purple</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"p(7]lmi5A3)t~w(KF(6u\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"X0?kkWD(jMj-BYPA/fw9\"><field name=\"comment\">Purple light tells the robot to turn left</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\",tC.wb}nn=x?r-)E_qOJ\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"@rj/HZLHY?y:M0*wk`WX\"><field name=\"TEXT\">Purple light</field></shadow></value><next><block type=\"iq_looks_next_row_new\" id=\"nBJ.O:U]?GpVw?bq/avA\"><field name=\"TARGET\">Brain</field><next><block type=\"iq_drivetrain_turn_for\" id=\"1SSPWp~pSo5w`.k03Y@%\"><field name=\"TURNDIRECTION\">left</field><field name=\"anddontwait_mutator\">true</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"4/~+p?r_3dxAeU},L1f`\"><field name=\"NUM\">90</field></shadow></value></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[7,12],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"integrated","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[11],"name":"TouchLED11","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[10],"name":"Optical10","customName":false,"deviceType":"Optical","deviceClass":"optical","setting":{},"triportSourcePort":22},{"port":[5],"name":"Bumper5","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[6],"name":"Distance6","customName":false,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22}],"slot":0,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.8","minVersion":"3.0.0","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT7, 1, false);\nmotor RightDriveSmart = motor(PORT12, 1, true);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\ntouchled TouchLED11 = touchled(PORT11);\noptical Optical10 = optical(PORT10);\nbumper Bumper5 = bumper(PORT5);\ndistance Distance6 = distance(PORT6);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  wait(100,msec);\n  double xAxis = BrainInertial.acceleration(xaxis) * 1000;\n  double yAxis = BrainInertial.acceleration(yaxis) * 1000;\n  double zAxis = BrainInertial.acceleration(zaxis) * 1000;\n  // Combine these values into a single integer\n  int seed = int(\n    xAxis + yAxis + zAxis\n  );\n  // Set the seed\n  srand(seed); \n}\n\nbool vexcode_initial_drivetrain_calibration_completed = false;\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n  vexcode_initial_drivetrain_calibration_completed = true;\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\nvoid vexcodeInit() {\n\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable, Optcolor;\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Optical sensor light on helps the robot see better, may need adjusted based on environment\n  Optical10.setLight(ledState::on);\n  Optical10.gestureDisable();\n  while (true) {\n    if (Optical10.color() == green) {\n      // Greenlight tells the robot to move forward\n      Drivetrain.drive(forward);\n      Brain.Screen.print(\"Greenlight\");\n      Brain.Screen.newLine();\n    }\n    if (Optical10.color() == red) {\n      // Red light tells the robot to stop\n      Drivetrain.stop();\n      Brain.Screen.print(\"Redlight\");\n      Brain.Screen.newLine();\n    }\n    if (Optical10.color() == blue) {\n      // Blue light tells the robot to turn right\n      Brain.Screen.print(\"Bluelight\");\n      Brain.Screen.newLine();\n      Drivetrain.turnFor(right, 90.0, degrees, false);\n    }\n    if (Optical10.color() == purple) {\n      // Purple light tells the robot to turn left\n      Brain.Screen.print(\"Purple light\");\n      Brain.Screen.newLine();\n      Drivetrain.turnFor(left, 90.0, degrees, false);\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  whenStarted1();\n}","target":"Physical"}